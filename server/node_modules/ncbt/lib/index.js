"use strict";
var errh = function (func, cb) {
	return function (err, res1, res2, res3) {
		if (err) {
			cb(err);
		}
		else {
			switch (arguments.length) {
				// perform fast for few number of args
				case 1:
					func(cb);
					break;
				case 2:
					func(res1, cb);
					break;
				case 3:
					func(res1, res2, cb);
					break;
				case 4:
					func(res1, res2, res3, cb);
					break;
				default: // slow way for other cases
					var args = Array.prototype.slice.call(arguments);
					args.shift();
					args[args.length] = cb;
					func.apply(null, args);
					break;
			}
		}
	};
};

errh.noResult = function (cb) {
	return function (err) {
		cb(err);
	};
};

errh.nullResult = function (cb) {
	return function (err) {
		cb(err, null);
	};
};


module.exports = {
	errh: errh
};
