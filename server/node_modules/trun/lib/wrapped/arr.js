"use strict";
var inherits = require('util').inherits;
var WrappedTask = require('./core/wrapped_task');


var Arr = function (tasks) {
	WrappedTask.call(this);
	this.tasks = tasks;
};
inherits(Arr, WrappedTask);

Arr.prototype.run = function (runner, ctx, cb) {
	var self = this;
	var i = 0;
	var next = function (err) {
		if (err == null && i < self.tasks.length) {
			if (arguments.length > 1) {
				next.ctx.prevResult = Array.prototype.slice.call(arguments, 1);
			}
			else {
				next.ctx.prevResult = [];
			}
			runner.runTaskFunc(runner.createTaskFunc(self.tasks[i++]), ctx.args.slice(), next);
		}
		else {
			cb.apply(null, arguments);
		}
	};
	next.ctx = {
		box: {}
	};
	next();
};

Arr.arr = function () {
	return new Arr(Array.prototype.slice.call(arguments));
};


module.exports = Arr;
